---
name: Cloaca Tests

on:
  workflow_call:  # Only called by ci.yml

concurrency:
  group: cloaca-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cloaca-wheels:
    name: Build Cloaca Wheels
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
        backend: [postgres, sqlite]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-cloaca-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-cloaca-
            ${{ matrix.os }}-cargo-

      - name: Install maturin and build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin[patchelf] build twine angreal

      - name: Build wheel for ${{ matrix.backend }}
        run: |
          angreal cloaca package --backend ${{ matrix.backend }}

  cloaca-bindings-tests:
    name: Cloaca Bindings Tests
    strategy:
      fail-fast: false
      matrix:
        backend: [postgres, sqlite]
        python-version: ['3.12']
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cloaca-bindings-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-cloaca-bindings-
            ${{ runner.os }}-cargo-

      - name: Install angreal
        run: |
          python -m pip install --upgrade pip
          pip install angreal

      - name: Docker Compose Cache
        if: matrix.backend == 'postgres'
        uses: actions/cache@v4
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('.angreal/docker-compose.yaml') }}

      - name: Start PostgreSQL services
        if: matrix.backend == 'postgres'
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: ".angreal/docker-compose.yaml"

      - name: Run Cloaca bindings tests
        run: |
          angreal cloaca test --backend ${{ matrix.backend }}

  source-distributions:
    name: Build Source Distributions
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine angreal

      - name: Build dispatcher sdist
        run: |
          angreal cloaca generate --backend postgres
          cd cloaca
          python -m build --sdist
          twine check dist/*

      - name: Build backend sdists
        run: |
          for backend in postgres sqlite; do
            echo "Building $backend backend sdist..."
            angreal cloaca generate --backend $backend
            cd cloaca-backend
            python -m build --sdist
            twine check dist/*
            # Clean up for next backend to avoid conflicts
            rm -rf dist/
            cd ..
            angreal cloaca scrub
          done
