---
name: Examples & Documentation

on:
  workflow_call:  # Only called by ci.yml

concurrency:
  group: examples-docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust-tutorials:
    name: Rust Tutorial Tests
    strategy:
      fail-fast: false
      matrix:
        tutorial: ["01", "02", "03", "04", "05", "06"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install angreal
        run: |
          python -m pip install --upgrade pip
          pip install angreal

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-rust-tutorials-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-rust-tutorials-
            ${{ runner.os }}-rust-

      - name: Run tutorial ${{ matrix.tutorial }}
        run: angreal demos tutorial-${{ matrix.tutorial }}

  rust-examples:
    name: Rust Example Tests
    strategy:
      fail-fast: false
      matrix:
        example: ["cron-scheduling", "multi-tenant", "per-tenant-credentials", "registry-execution-demo", "simple-packaged-demo", "complex-dag-example"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install angreal
        run: |
          python -m pip install --upgrade pip
          pip install angreal

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-rust-examples-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-rust-examples-
            ${{ runner.os }}-rust-

      - name: Docker Compose Cache
        uses: actions/cache@v4
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('.angreal/docker-compose.yaml') }}

      - name: Start PostgreSQL services
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: ".angreal/docker-compose.yaml"

      - name: Run ${{ matrix.example }} example
        run: angreal demos ${{ matrix.example }}

  python-tutorials:
    name: Python Tutorial Tests
    strategy:
      fail-fast: false
      matrix:
        include:
          # SQLite tutorials (01-04, 06) - tutorial 05 requires PostgreSQL
          - tutorial: "01"
            backend: sqlite
          - tutorial: "02"
            backend: sqlite
          - tutorial: "03"
            backend: sqlite
          - tutorial: "04"
            backend: sqlite
          - tutorial: "06"
            backend: sqlite
          # PostgreSQL tutorials (01-06, including 05 which requires postgres)
          - tutorial: "01"
            backend: postgres
          - tutorial: "02"
            backend: postgres
          - tutorial: "03"
            backend: postgres
          - tutorial: "04"
            backend: postgres
          - tutorial: "05"
            backend: postgres
          - tutorial: "06"
            backend: postgres
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-py-tutorials-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-py-tutorials-
            ${{ runner.os }}-cargo-

      - name: Install angreal
        run: |
          python -m pip install --upgrade pip
          pip install angreal

      - name: Docker Compose Cache
        if: matrix.backend == 'postgres'
        uses: actions/cache@v4
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('.angreal/docker-compose.yaml') }}

      - name: Start PostgreSQL services
        if: matrix.backend == 'postgres'
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: ".angreal/docker-compose.yaml"

      - name: Run Python tutorial ${{ matrix.tutorial }} (${{ matrix.backend }})
        run: |
          angreal demos python-tutorial-${{ matrix.tutorial }} --backend ${{ matrix.backend }}

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install angreal
        run: |
          python -m pip install --upgrade pip
          pip install angreal

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.147.0'
          extended: true

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-rust-docs-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-rust-docs-
            ${{ runner.os }}-rust-

      - name: Cache Hugo modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/hugo
            resources
          key: ${{ runner.os }}-hugo-${{ hashFiles('**/go.mod', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugo-

      - name: Build documentation
        run: angreal docs build
