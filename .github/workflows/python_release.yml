---
name: Cloaca - Release
on:
  release:
    types: [published]
  push:
    branches:
      - build**
      - cicd-*
      - cicd/**
      - python-release/**

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Build wheels for all platforms and Python versions
  cloaca-release-wheels:
    name: Cloaca - Build Release Wheels
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        backend: [postgres, sqlite]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: release-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}

      - name: Install angreal
        run: |
          python -m pip install --upgrade pip
          pip install angreal

      - name: Build release wheel
        run: |
          # Use angreal release command for production builds
          angreal cloaca release --backend ${{ matrix.backend }}

      - name: Upload release wheel
        uses: actions/upload-artifact@v4
        with:
          name: release-wheel-${{ matrix.backend }}-py${{ matrix.python-version }}
          path: target/wheels/cloaca_${{ matrix.backend }}-*.whl

  # Build dispatcher source distribution
  cloaca-dispatcher-sdist:
    name: Cloaca - Build Dispatcher Sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build dispatcher sdist
        working-directory: cloaca
        run: python -m build --sdist

      - name: Upload dispatcher sdist
        uses: actions/upload-artifact@v4
        with:
          name: dispatcher-sdist
          path: cloaca/dist/*.tar.gz

  # Verify all wheels work correctly
  cloaca-verify-release:
    name: Cloaca - Verify Release
    needs: [cloaca-release-wheels, cloaca-dispatcher-sdist]
    strategy:
      matrix:
        backend: [postgres, sqlite]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download dispatcher sdist
        uses: actions/download-artifact@v4
        with:
          name: dispatcher-sdist
          path: dispatcher/

      - name: Download backend wheel
        uses: actions/download-artifact@v4
        with:
          name: release-wheel-${{ matrix.backend }}-py3.11
          path: wheels/

      - name: Install angreal
        run: |
          python -m pip install --upgrade pip
          pip install angreal

      - name: Verify release packages
        run: |
          # Install from built artifacts and run verification
          python -m venv verify-env
          source verify-env/bin/activate || verify-env\\Scripts\\activate

          pip install angreal
          pip install dispatcher/*.tar.gz
          pip install wheels/cloaca_${{ matrix.backend }}-*.whl

          # Run comprehensive verification using angreal
          angreal cloaca smoke --backend ${{ matrix.backend }}

          # Run a subset of tests to verify release quality
          angreal cloaca test --backend ${{ matrix.backend }} -k "basic or api"
        shell: bash

  # Publish to PyPI (only on tagged releases)
  cloaca-publish-pypi:
    name: Cloaca - Publish to PyPI
    needs: [cloaca-verify-release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/project/cloaca/
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Organize artifacts for PyPI
        run: |
          mkdir -p pypi-dist

          # Move dispatcher sdist
          mv dist/dispatcher-sdist/*.tar.gz pypi-dist/

          # Move all backend wheels
          find dist -name "*.whl" -exec mv {} pypi-dist/ \;

          echo "Files to upload:"
          ls -la pypi-dist/

      - name: Verify package metadata
        run: |
          python -m pip install --upgrade pip twine
          twine check pypi-dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: pypi-dist/
          verbose: true

  # Create GitHub release assets
  cloaca-release-assets:
    name: Cloaca - Create Release Assets
    needs: [cloaca-release-wheels, cloaca-dispatcher-sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create release archive
        run: |
          mkdir -p release-assets

          # Create comprehensive release package
          tar -czf release-assets/cloaca-python-wheels-${GITHUB_REF#refs/tags/}.tar.gz artifacts/

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: release-assets/*.tar.gz
